{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\n// const stateInput = document.querySelectorAll('input[name=\"state\"]');\n// const state1 = document.querySelector('input[name=\"state\"]:checked');\n\n// console.log(stateInput);\n// console.log(state1);\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = Number(delayInput.value);\n  console.log(typeof delay);\n  const state = document.querySelector('input[name=\"state\"]:checked').value;\n  //   const state = stateInput.checked.value;\n  console.log(state);\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(` Fulfilled promise in ${delay}ms`);\n      } else {\n        reject(` Rejected promise in ${delay}ms`);\n      }\n    }, delay);\n  });\n  promise\n    .then(value => {\n      iziToast.success({\n        backgroundColor: 'green',\n        message: value,\n        position: 'topRight',\n        messageColor: 'white',\n      });\n    })\n    .catch(err => {\n      iziToast.error({\n        backgroundColor: 'red',\n        message: err,\n        position: 'topRight',\n        messageColor: 'white',\n      });\n    });\n}\n\n// const promise = new Promise((resolve, reject) => {\n//* resolve - фукнція, яка переведе проміс у стан Fullfilled\n//* reject - функція, яка переведе проміс у стан Rejected\n\n// const isPromiseFullfilled = Math.random() > 0.5;\n// console.log(isPromiseFullfilled);\n\n//   setTimeout(() => {\n//     if (isPromiseFullfilled) {\n//       resolve(\n//         \"Проміс виконався успішно, із результатом (виконаний, fulfilled)\"\n//       );\n//     } else {\n//       reject(\"Проміс виконався з помилкою (відхилений, rejected)\");\n//     }\n//   }, 1000);\n// });\n\n// console.log(promise); // побачимо обʼєкт промісу у стані пендінг, наголошую увагу на тому, що витягнути результат виконання промісу у синхронний код не можна!!! (можна зробити імітацію через async/await, але це розглянемо пізніше, або обробити результат промісу за допомогою методів then() та catch())\n\n// promise\n//   .then((value) => {\n//     console.log(`✅ ${value}`);\n//   })\n//   .catch((err) => {\n//     console.log(`❌ ${err}`);\n//   })\n//   .finally(() => {\n//     console.log(\"проміс завершений!\");\n//   });\n"],"names":["form","delayInput","onSubmit","event","delay","state","resolve","reject","value","iziToast","err"],"mappings":"wIAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,qBAAqB,EAM/DD,EAAK,iBAAiB,SAAUE,CAAQ,EAExC,SAASA,EAASC,EAAO,CACvBA,EAAM,eAAc,EACpB,MAAMC,EAAQ,OAAOH,EAAW,KAAK,EACrC,QAAQ,IAAI,OAAOG,CAAK,EACxB,MAAMC,EAAQ,SAAS,cAAc,6BAA6B,EAAE,MAEpE,QAAQ,IAAIA,CAAK,EACD,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQ,yBAAyBF,CAAK,IAAI,EAE1CG,EAAO,wBAAwBH,CAAK,IAAI,CAE3C,EAAEA,CAAK,CACZ,CAAG,EAEE,KAAKI,GAAS,CACbC,EAAS,QAAQ,CACf,gBAAiB,QACjB,QAASD,EACT,SAAU,WACV,aAAc,OACtB,CAAO,CACP,CAAK,EACA,MAAME,GAAO,CACZD,EAAS,MAAM,CACb,gBAAiB,MACjB,QAASC,EACT,SAAU,WACV,aAAc,OACtB,CAAO,CACP,CAAK,CACL"}